#!/bin/bash

LOG_FILE="/Library/Logs/install_ibm_spss_statistics_log4j_fix.log"
TEMP_DIR="/tmp/spss_fix_log4j"
FIX_FILE_DIR="${TEMP_DIR}/fix_files/"
FIX_FILES=(
  "log4j-1.2-api-2.17.1.jar"
  "log4j-api-2.17.1.jar"
  "log4j-core-2.17.1.jar"
)
OLD_FIX_FILES=(
  "log4j-1.2-api-2.15.0.jar"
  "log4j-api-2.15.0.jar"
  "log4j-core-2.15.0.jar"
  "log4j-1.2-api-2.16.0.jar"
  "log4j-api-2.16.0.jar"
  "log4j-core-2.16.0.jar"
  "log4j-1.2-api-2.17.0.jar"
  "log4j-api-2.17.0.jar"
  "log4j-core-2.17.0.jar"
)

function setup_logging() {
  if [[ ! -e "${LOG_FILE}" ]]; then
    if ! touch "${LOG_FILE}"; then
      echo "Failed to make log file"
    fi
  fi
  exec > >(tee -a "${LOG_FILE}") 2>&1
}

cleanup() {
 rm -rf "${TEMP_DIR}"
}

remove_previous_fix() {
  echo "BEGIN: Removing old fix files"
  for VUL_PATH in "${VUL_PATHS[@]}"; do
    for OLD_FIX_FILE in "${OLD_FIX_FILES[@]}"; do
      if [[ -f "${VUL_PATH}${OLD_FIX_FILE}" ]]; then
        echo -n "Removing \"${VUL_PATH}${OLD_FIX_FILE}\"..."
        if rm -f "${VUL_PATH}${OLD_FIX_FILE}"; then
          echo "Done"
        else
          echo "Failed"
        fi
      fi
    done
  done
  echo "END: Removing old fix files"
}

remove_vulnerable_files() {
  echo "BEGIN: Removing vulnerable files"
  for VUL_FILE in "${VUL_FILES[@]}"; do
    if [[ -f "${VUL_FILE}" ]]; then
      echo -n "Removing \"${VUL_FILE}\"..."
      if rm -f "${VUL_FILE}"; then
        echo "Done"
      else
        echo "Failed"
      fi
    fi
  done
  echo "END: Removing vulnerable files"
}

copy_fix_files() {
  echo "BEGIN: Copying fix files"
  for VUL_PATH in "${VUL_PATHS[@]}"; do
    for FIX_FILE in "${FIX_FILES[@]}"; do
      echo -n "Copying ${FIX_FILE} to \"${VUL_PATH}\"..."
      if cp "${FIX_FILE_DIR}${FIX_FILE}" "${VUL_PATH}"; then
        echo "Done"
      else
        echo "Failed"
      fi
    done
  done
  echo "END: Copying fix files"
}

fix_present() {
  local FIX_PRESENT="TRUE"
  echo "BEGIN: Checking for fix files"
  for VUL_PATH in "${VUL_PATHS[@]}"; do
    for FIX_FILE in "${FIX_FILES[@]}"; do
      if [[ ! -f "${VUL_PATH}${FIX_FILE}" ]]; then
        FIX_PRESENT="FALSE"
        echo "Missing \"${VUL_PATH}${FIX_FILE}\""
      fi
    done
  done
  echo "END: Checking for fix files"
  if [[ "${FIX_PRESENT}" = "TRUE" ]]; then
    echo "Result: All fix files found"
    return 0
  else
    echo "Result: Missing fix files"
    return 1
  fi
}

old_fix_present() {
  local OLD_FIX_FOUND="FALSE"
  echo "BEGIN: Checking for old fix files"
  for VUL_PATH in "${VUL_PATHS[@]}"; do
    for OLD_FIX_FILE in "${OLD_FIX_FILES[@]}"; do
      if [[ -f "${VUL_PATH}${OLD_FIX_FILE}" ]]; then
        OLD_FIX_FOUND="TRUE"
        echo "Found \"${VUL_PATH}${OLD_FIX_FILE}\""
      fi
    done
  done
  echo "END: Checking for old fix files"
  if [[ "${OLD_FIX_FOUND}" = "TRUE" ]]; then
    echo "Result: Old fix files found"
    return 0
  else
    echo "Result: No old fix files found"
    return 1
  fi
}

vulnerable_files_present(){
  local VUL_FILE_FOUND="FALSE"
  echo "BEGIN: Checking for vulnerable files"
  for VUL_FILE in "${VUL_FILES[@]}"; do
    if [[ -f "${VUL_FILE}" ]]; then
      VUL_FILE_FOUND="TRUE"
      echo "Found \"${VUL_FILE}\""
    fi
  done
  echo "END: Checking for vulnerable files"
  if [[ "${VUL_FILE_FOUND}" = "TRUE" ]]; then
    echo "Result: vulnerable files found"
    return 0
  else
    echo "Result: No vulnerable files found"
    return 1
  fi
}

vulnerable() {
  local VULNERABLE="FALSE"
  echo "BEGIN: Checking if vulnerable"
  if vulnerable_files_present; then
    VULNERABLE="TRUE"
  fi

  if ! fix_present; then
    VULNERABLE="TRUE"
  fi

  if old_fix_present; then
    VULNERABLE="TRUE"
  fi

  echo "END: Checking if vulnerable"
  if [[ "${VULNERABLE}" = "TRUE" ]]; then
    return 0
  else
    return 1
  fi
}

fix28_1() {
  VUL_PATHS=(
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.3.0.0/lib/"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.cognos.9/"
  )
  VUL_FILES=(
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-core-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-1.2-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.3.0.0/lib/log4j-1.2-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.3.0.0/lib/log4j-core-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.3.0.0/lib/log4j-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.cognos.9/log4j-core-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.cognos.9/log4j-api-2.13.3.jar"
  )
}

fix28() {
  VUL_PATHS=(
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.2.3.0/lib/"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.cognos.9/"
  )
  VUL_FILES=(
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-core-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-1.2-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.2.3.0/lib/log4j-1.2-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.2.3.0/lib/log4j-core-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.2.3.0/lib/log4j-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.cognos.9/log4j-core-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.cognos.9/log4j-api-2.13.3.jar"
  )
}

fix27_1() {
  VUL_PATHS=(
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.2.3.0/lib/"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.cognos.9/"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.tm1.9/"
  )
  VUL_FILES=(
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-core-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-1.2-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.2.3.0/lib/log4j-core-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.2.3.0/lib/log4j-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.cognos.9/log4j-1.2.17.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.tm1.9/log4j-1.2.16.jar"
  )
}

fix27() {
  VUL_PATHS=(
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.1.1.0/lib/"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.cognos.9/"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.tm1.9/"
  )
  VUL_FILES=(
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-core-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/log4j-1.2-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.1.1.0/lib/log4j-core-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/bin/as-3.1.1.0/lib/log4j-api-2.13.3.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.cognos.9/log4j-1.2.17.jar"
    "${SPSS_HOME}/SPSS Statistics.app/Contents/common/ext/bin/spss.tm1.9/log4j-1.2.16.jar"
  )
}

fix26() {
  VUL_PATHS=(
    "${SPSS_HOME}/SPSSStatistics.app/Contents/common/ext/bin/spss.tm1.9/"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/common/ext/bin/spss.cognos.9/"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/as-3.1.1.0/lib/"
  )
  VUL_FILES=(
    "${SPSS_HOME}/SPSSStatistics.app/Contents/common/ext/bin/spss.tm1.9/log4j-1.2.16.jar"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/common/ext/bin/spss.cognos.9/log4j-1.2.17.jar"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/as-3.1.1.0/lib/com.springsource.org.apache.log4j-1.2.16.jar"
  )
}

fix25() {
  VUL_PATHS=(
    "${SPSS_HOME}/SPSSStatistics.app/Contents/bin/"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/common/ext/bin/spss.tm1.8/"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/common/ext/bin/spss.cognos.8/"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/as-3.1.0.0/lib/"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/as-3.1.0.0/3rdparty/"
  )
  VUL_FILES=(
    "${SPSS_HOME}/SPSSStatistics.app/Contents/bin/log4j-1.2.16.jar"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/common/ext/bin/spss.tm1.8/log4j-1.2.16.jar"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/common/ext/bin/spss.cognos.8/log4j-1.2.17.jar"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/as-3.1.0.0/lib/com.springsource.org.apache.log4j-1.2.16.jar"
    "${SPSS_HOME}/SPSSStatistics.app/Contents/as-3.1.0.0/3rdparty/com.springsource.org.apache.log4j-1.2.16.jar"
  )
}


# Apply Fix
setup_logging
trap cleanup EXIT

SPSS_APP_BUNDLES=$(find -E /Applications -regex ".*/SPSS ?Statistics\.app" -maxdepth 3)
for SPSS_APP_BUNDLE in "${SPSS_APP_BUNDLES[@]}"; do

  echo "SPSS found at \"${SPSS_APP_BUNDLE}\""
  SPSS_HOME=$(dirname "${SPSS_APP_BUNDLE}")
  SPSS_VERSION=$(xmllint --xpath "/plist/dict/key[text()='CFBundleVersion']/following-sibling::string[1]/text()" "${SPSS_APP_BUNDLE}/Contents/Info.plist" | tr -d " ")
  echo "SPSS Home: ${SPSS_HOME}"
  echo "SPSS Version: ${SPSS_VERSION}"

  case "${SPSS_VERSION}" in
    28.0.1*)
      fix28_1
      ;;
    28.0.0*)
      fix28
      ;;
    27.0.1*)
      fix27_1
      ;;
    27.0.0*)
      fix27
      ;;
    26.0*)
      fix26
      ;;
    25.0*)
      fix25
      ;;
    *)
      ;;
  esac

  if ! vulnerable; then
    echo "Result: \"${SPSS_APP_BUNDLE}\" is not vulnerable. Have you already applied the fix?"
  else
    echo "Result: \"${SPSS_APP_BUNDLE}\" is vulnerable. Applying fix."
    remove_previous_fix
    remove_vulnerable_files
    copy_fix_files

    if vulnerable; then
      echo "Result: Fix Failed!"
      exit 1
    else
      echo "Result: Fix Success!"
    fi
  fi
done

exit 0